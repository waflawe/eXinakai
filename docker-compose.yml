version: '3.8'

services:
  postgres-db:
    image: postgres:16
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=exinakai
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - web-network
    stdin_open: true
    tty: true

  web:
    container_name: web
    build:
      context: ./
    volumes:
      - static_volume:/eXinakai/static/
      - media_volume:/eXinakai/media/
    ports:
      - "8000:8000"
    networks:
      - web-network
    depends_on:
      - celery
      - postgres-db

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/static/
      - media_volume:/media/
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "80:80"
    networks:
      - web-network
    depends_on:
      - web
#    healthcheck:
#      test: curl -f http://localhost:80/ || exit 1
#      interval: 60s
#      timeout: 5s
#      retries: 3
#      start_period: 20s

  redis:
    image: redis:latest
    container_name: redis
    networks:
      - web-network

  celery:
    container_name: celery
    build:
      context: ./
    command: celery -A core.celery_setup:app worker --loglevel=info
    volumes:
      - media_volume:/eXinakai/media/
    depends_on:
      - redis
      - postgres-db
    networks:
      - web-network

volumes:
  media_volume:
  static_volume:

networks:
  web-network:
    driver: bridge