openapi: 3.0.3
info:
  title: eXinakai
  version: 1.1.0
  description: Простой, минималистичный и функциональный онлайн менеджер паролей.
paths:
  /api/v1/collections/:
    get:
      operationId: collections_list
      description: View all passwords collections.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - collections
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPasswordsCollectionList'
          description: ''
    post:
      operationId: collections_create
      description: Saves the new passwords collection to the database.
      tags:
      - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordsCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordsCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordsCollection'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/collections/{id}/:
    delete:
      operationId: collections_destroy
      description: Deleting a passwords collection from the database.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - collections
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/generate/password/:
    get:
      operationId: generate_password_retrieve
      description: Random password generation.
      tags:
      - generate
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RandomPassword'
          description: ''
  /api/v1/key/activate/:
    post:
      operationId: key_activate_create
      description: Activation of the encryption key.
      tags:
      - key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CryptographicKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CryptographicKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CryptographicKey'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedCode'
          description: ''
  /api/v1/password/change/:
    post:
      operationId: password_change_create
      description: Changing the account password.
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/password/reset/:
    post:
      operationId: password_reset_create
      description: Account password reset.
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedCode'
          description: ''
  /api/v1/password/reset/confirm/:
    post:
      operationId: password_reset_confirm_create
      description: Account password reset confirmation.
      tags:
      - password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/passwords/:
    get:
      operationId: passwords_list
      description: View all saved passwords.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - passwords
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPasswordsList'
          description: ''
    post:
      operationId: passwords_create
      description: Saves the new password to the database.
      tags:
      - passwords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Passwords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Passwords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Passwords'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/passwords/{id}/:
    put:
      operationId: passwords_update
      description: Updates the collection or note of the password.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - passwords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
    patch:
      operationId: passwords_partial_update
      description: View all saved passwords.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - passwords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPasswords'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPasswords'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPasswords'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passwords'
          description: ''
    delete:
      operationId: passwords_destroy
      description: Deleting a password from the database.
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - passwords
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/settings/:
    get:
      operationId: settings_retrieve
      description: View and change account settings.
      tags:
      - settings
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
    post:
      operationId: settings_create
      description: View and change account settings.
      tags:
      - settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Settings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Settings'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
  /api/v1/token/2fa/:
    post:
      operationId: token_2fa_create
      description: Log in to your account with two-step authentication enabled.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwoFactorAuthenticationCode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TwoFactorAuthenticationCode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TwoFactorAuthenticationCode'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedCode'
          description: ''
  /api/v1/token/login/:
    post:
      operationId: token_login_create
      description: Account login by token.
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedCode'
          description: ''
        '400':
          description: No response body
  /api/v1/token/logout/:
    post:
      operationId: token_logout_create
      description: Logging out of the account.
      tags:
      - token
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detail'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    CryptographicKey:
      type: object
      properties:
        cryptographic_key:
          type: string
          maxLength: 512
      required:
      - cryptographic_key
    Detail:
      type: object
      properties:
        detail:
          type: string
      required:
      - detail
    DetailedCode:
      type: object
      properties:
        detail:
          type: string
        code:
          type: string
          maxLength: 32
      required:
      - code
      - detail
    PaginatedPasswordsCollectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PasswordsCollection'
    PaginatedPasswordsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Passwords'
    PasswordChange:
      type: object
      properties:
        old_password:
          type: string
          maxLength: 128
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
      - old_password
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    Passwords:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        note:
          type: string
          title: Примета
          maxLength: 256
        password:
          type: string
          readOnly: true
        collection:
          type: string
          readOnly: true
        time_added:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - collection
      - id
      - note
      - password
      - time_added
    PasswordsCollection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          title: Создатель
        name:
          type: string
          title: Название
          maxLength: 128
        time_created:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - id
      - name
      - time_created
    PatchedPasswords:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        note:
          type: string
          title: Примета
          maxLength: 256
        password:
          type: string
          readOnly: true
        collection:
          type: string
          readOnly: true
        time_added:
          type: object
          additionalProperties: {}
          readOnly: true
    RandomPassword:
      type: object
      properties:
        password:
          type: string
      required:
      - password
    Settings:
      type: object
      properties:
        username:
          type: string
          readOnly: true
          title: Имя пользователя
          description: Не более 16 символов, не менее 5. Буквы, цифры, @/./+/-/_.
        email:
          type: string
          format: email
        avatar:
          type: string
          format: uri
        timezone:
          type: string
          title: Временная зона
          maxLength: 64
        is_2fa_enabled:
          type: boolean
      required:
      - username
    TwoFactorAuthenticationCode:
      type: object
      properties:
        code:
          type: string
          maxLength: 6
          minLength: 6
      required:
      - code
    UpdatePassword:
      type: object
      properties:
        note:
          type: string
          title: Примета
          maxLength: 256
        collection:
          type: integer
          nullable: true
          title: Коллекция
      required:
      - note
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
